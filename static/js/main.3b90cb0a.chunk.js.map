{"version":3,"sources":["components/C01componente.jsx","components/C02contador.js","components/C03compCssObj.js","components/C03CompCss.js","components/C04estado.js","components/C05dobleestado.js","components/C06variable.js","components/C07operador.js","components/C08matriz.js","App.js","reportWebVitals.js","index.js"],"names":["C01componente","C02contador","estiloObj","estilo1","backgroundColor","fontSize","C03componenteConCss","className","style","color","padding","EjemploDeEstado","useState","numero","setNumero","onClick","EjemploDeDobleEstado","valor","setValor","console","log","ComponenteConVariable","props","xVariable","OperadorTernario","edad","xEdad","Matriz","lista","map","doc","item","indice","push","xValor","xIndice","indice_de_p","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAUeA,EARO,WAClB,OACI,sFCMOC,EARK,WAChB,OACI,4ECGOC,G,MAPG,CACdC,QAAS,CACLC,gBAAiB,SACjBC,SAAU,SCwBHC,EAvBa,WACxB,OACI,sBAAKC,UAAU,iBAAf,UACI,6EAEA,wBAAQC,MAAO,CAACJ,gBAAgB,QAASK,MAAM,OAAQC,QAAQ,OAA/D,oFAGA,uBAEA,oFAGA,uBAEA,wBAAQF,MAAOA,EAAML,QAArB,6E,OCEGQ,EAnBS,WAEpB,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OACI,sBAAKN,MAAO,CAACJ,gBAAgB,eAA7B,UACI,mFAEA,iEAAoCS,EAApC,OAEA,wBAAQE,QAVC,WACbD,EAAUD,EAAS,IASf,+BCWGG,EAzBc,WAEzB,MAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BN,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OACI,eAAC,WAAD,WACI,kFAEA,wBAAQC,QAAS,kBAAIG,EAASD,EAAM,IAApC,kDACA,8DAAiCA,KACjC,uBAEA,wBAAQF,QAbM,WAClBD,EAAUD,EAAS,GACnBM,QAAQC,IAAI,wBAWR,kDACA,8DAAiCP,SCT9BQ,EAXe,SAACC,GAC3B,OACI,sBAAKd,MAAO,CAACJ,gBAAgB,eAA7B,UACI,sIAGA,yDAA4BkB,EAAMC,iBCW/BC,EAjBU,SAACF,GAEtB,IAAMG,EAAOH,EAAMI,MAEnB,OACI,eAAC,WAAD,WACI,+FAEA,mDAAsBD,EAAtB,QAEA,iEACKA,GAAQ,GAAI,iBAAkB,wBC4BhCE,EAvCA,WAEX,MAA0Bf,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,KAAhD,mBAAOgB,EAAP,UAEA,OACI,eAAC,WAAD,WACI,sFAEA,oBAAIpB,MAAO,CAACJ,gBAAgB,UAA5B,+DACIwB,EAAMC,KAAI,SAACC,GAAD,OAASA,KACvB,uBAEA,qDACIF,EAAMC,KAAI,SAACE,GAAD,OAAU,qCAAQA,EAAR,UACxB,uBAEA,iEACIH,EAAMC,KAAI,SAACZ,EAAOe,GAAR,OAAmB,kCAAKA,EAAL,MAAgBf,EAAhB,UACjC,uBAEA,kEAEIW,EAAMK,KAAK,KACXL,EAAMC,KAAI,SAACZ,EAAOe,GAAR,OAAmB,kCAAKA,EAAL,MAAgBf,EAAhB,WAEjC,uBAEA,4FAEIW,EAAMC,KAAI,SAACK,EAAQC,GAAT,OACN,oBAAGC,YAAeD,EAAlB,UACKA,EADL,MACiBD,QAIzB,2BCJGG,MAtBf,WACE,OACE,gCACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,CAAuBd,UAAU,iCACjC,uBACA,cAAC,EAAD,CAAkBG,MAAQ,OAC1B,uBACA,cAAC,EAAD,QChBSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3b90cb0a.chunk.js","sourcesContent":["import React from 'react'           //rafce //Archivo es nombre de componente\r\n\r\nconst C01componente = () => {\r\n    return (\r\n        <div>\r\n            Componente 1. definida como funcion flecha (rafce)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default C01componente\r\n\r\n/*\r\nimport React from 'react';          //imr   //Asigna sólo el import\r\n\r\nconst OtroNombre = () => {      //sfc   //Escribir nombre de componente\r\n    return ( <h3>Componente definida como fn flecha (imr, sfc)</h3> );\r\n}\r\n \r\nexport default OtroNombre;\r\n*/\r\n\r\n/*\r\nimport React from 'react'           //rfce   //Archivo es nombre de componente\r\n\r\nfunction C01componente() {          //Tipo función\r\n    return (\r\n        <div>\r\n            <h3>Componente normal (rfce)</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default C01componente\r\n*/\r\n\r\n/*\r\nimport React from 'react'           //rfc   //Abr. y archivo nombre de componente\r\n\r\nexport default function C01componente() {   //Tipo función con export\r\n    return (\r\n        <div>\r\n            <h3>Componente como fn normal con export (rfc)</h3>\r\n        </div>\r\n    )\r\n}\r\n*/\r\n/*\r\nimport React, { Component } from 'react';   //rcc   //Tipo clase\r\n\r\nclass C01componente extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Componente como clase (rcc)</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default C01componente;\r\n*/\r\n\r\n/*\r\nimport React from 'react'           //rafc  //Abr. fn flecha con export\r\n\r\nexport const C01componente = () => {\r\n    return (\r\n        <div>\r\n            <h3>Componente como fn flecha abreviada y con export</h3>\r\n        </div>\r\n    )\r\n}\r\n*/","import React from 'react'       //rafce\r\n\r\nconst C02contador = () => {\r\n    return (\r\n        <div>\r\n            Componente 2. Aqui codigo de contador...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default C02contador","const estiloObj = {\r\n    estilo1: {\r\n        backgroundColor: 'yellow',\r\n        fontSize: '1em',\r\n    },\r\n}\r\n\r\nexport default estiloObj","import React from 'react'\r\nimport './C03compCss.css'       //Archivo css con estilos normales\r\nimport style from './C03compCssObj.js'  //Archivo js con estilos como objeto\r\n\r\nconst C03componenteConCss = () => {\r\n    return (\r\n        <div className='marcoCompoente'>\r\n            <h4>Componente 3. Con formas de definir estilos</h4>\r\n\r\n            <button style={{backgroundColor:'green', color:'blue', padding:'2px'}}>\r\n                Botón 1 con estilos en línea de atributos (Definido como objeto)\r\n            </button>\r\n            <hr/>\r\n\r\n            <button> \r\n                Botón 2 con estilos en archivo css (normal)\r\n            </button>\r\n            <br/>\r\n\r\n            <button style={style.estilo1}> \r\n                Botón 3 con estilos en archivo js (Definido como objeto)\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default C03componenteConCss","import React, {useState} from 'react';\r\n\r\nconst EjemploDeEstado = () => {\r\n\r\n    const [numero, setNumero] = useState(0);\r\n\r\n    const aumentar = () => {\r\n        setNumero(numero + 1);\r\n    }\r\n\r\n    return ( \r\n        <div style={{backgroundColor:'yellowgreen'}}>\r\n            <h4>Componente 4. Ejemplo con definición de estado</h4>\r\n\r\n            <h3>Muestra incremento de valor... {numero} </h3> \r\n\r\n            <button onClick={aumentar} >Aumentar en 1</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default EjemploDeEstado;","import React, {useState, Fragment} from 'react';\r\n\r\nconst EjemploDeDobleEstado = () => {\r\n\r\n    const [valor, setValor] = useState(0);\r\n    const [numero, setNumero] = useState(0);\r\n\r\n    //Definiendo función flecha que incremente un valor\r\n    const IncrementoDos = () =>{\r\n        setNumero(numero + 1);\r\n        console.log(\"Mensaje de contador\");\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h4>Componente 5. Ejemplo con dos estados diferentes</h4>\r\n\r\n            <button onClick={()=>setValor(valor+1)}>Contador 1. Con función abreviada</button>\r\n            <span>Incremento de contador 1: {valor}</span>\r\n            <hr/>\r\n\r\n            <button onClick={IncrementoDos}>Contador 2. Con llamada a función</button>\r\n            <span>Incremento de contador 2: {numero}</span>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default EjemploDeDobleEstado;","import React from 'react';\r\n\r\nconst ComponenteConVariable = (props) => {\r\n    return ( \r\n        <div style={{backgroundColor:'yellowgreen'}}>\r\n            <h4>Componente 6. Muestra de recepción y lectura de \r\n                variable, enviada cuando es llamado el componente</h4>\r\n\r\n            <span>Lectura de variable: {props.xVariable}</span>\r\n        </div>\r\n    );    \r\n}\r\n \r\nexport default ComponenteConVariable;","import React, {Fragment} from 'react';\r\n\r\nconst OperadorTernario = (props) => {\r\n\r\n    const edad = props.xEdad;\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h4>Componente 7. Con variable recibida ejecuta operador ternario</h4>\r\n\r\n            <h3>Valor recibido: ({edad}) </h3>\r\n\r\n            <h3>Resultado de operador ternario:  \r\n                {edad >= 18? ' Mayor de edad': ' Menor de edad'}\r\n            </h3>\r\n        </Fragment>\r\n    );    \r\n}\r\n\r\nexport default OperadorTernario;","import React, {useState, Fragment} from 'react';\r\n\r\nconst Matriz = () => {\r\n\r\n    const [lista, setLista] = useState([10,20,30,44,50]);   //matriz de numeros\r\n    \r\n    return ( \r\n        <Fragment>\r\n            <h4>Componente 8. Varias formas de lectura de una matriz</h4>\r\n\r\n            <h1 style={{backgroundColor:'yellow'}}>1. Lectura (\"doc\" es cualquier variable) sin html</h1>\r\n            {   lista.map((doc) => doc )}\r\n            <br/>\r\n\r\n            <h1>2. Lectura con html</h1>\r\n            {   lista.map((item) => <span> {item} </span>) }\r\n            <br/>\r\n\r\n            <h1 >3. Lectura al indice y su valor</h1>\r\n            {   lista.map((valor, indice) => <p> {indice} / {valor} </p> ) }\r\n            <br/>\r\n\r\n            <h1 >4. Lectura al indice y su valor</h1>\r\n            {\r\n                lista.push(100),    //Agregando un valor a matriz inicial\r\n                lista.map((valor, indice) => <p> {indice} / {valor} </p> )\r\n            }\r\n            <br/>\r\n\r\n            <h1>5. Lectura donde se asigna \"indice\" a \"p\" osea al parrafo </h1>\r\n            {\r\n                lista.map((xValor, xIndice) => \r\n                    <p indice_de_p = {xIndice} >\r\n                        {xIndice} - {xValor}\r\n                    </p>\r\n                )\r\n            }\r\n            <br/>\r\n        </Fragment>\r\n    );    \r\n}\r\nexport default Matriz;","//import logo from './logo.svg';\n//import './App.css';\nimport C01componente from \"./components/C01componente\";\nimport C02contador from \"./components/C02contador\";\nimport C03componenteConCss from \"./components/C03CompCss\";\nimport EjemploDeEstado from \"./components/C04estado\";\nimport EjemploDeDobleEstado from \"./components/C05dobleestado\";\nimport ComponenteConVariable from \"./components/C06variable\";\nimport OperadorTernario from \"./components/C07operador\";\nimport Matriz from \"./components/C08matriz\";\n\nfunction App() {\n  return (\n    <div>\n      <C01componente />\n      <br/>\n      <C02contador />\n      <br/>\n      <C03componenteConCss />\n      <br/>\n      <EjemploDeEstado />\n      <br/>\n      <EjemploDeDobleEstado />\n      <br/>\n      <ComponenteConVariable xVariable=\"Hola mundo... desde... React\" />\n      <br/>\n      <OperadorTernario xEdad = \"20\" />\n      <br/>\n      <Matriz />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}